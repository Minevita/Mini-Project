package MusicPlayerService;

import java.util.ArrayList;
import java.util.List;
import java.util.logging.LogManager;

import MusicVo.*;
import Mp3PathParser.*;
/**
 * @author 문현석
 * 2021-07-30
 * MusicPlayerUtill -> MusicPlayerUtil로 변경
 * MusicPlayerCommon내의 멤버는 new없이 사용가능
 */
import static MusicPlayerUtil.MusicPlayerCommon.*;
/**
 * @author 김문수
 * 2021-07-28 
 * MusicPlayerServie 인터페이스의 기능 구현.
 * 실제 구동의 경우 testList는 systemPlayList가 되어야 함.
 * allList 구현 작업중
 */
public class MusicPlayerServiceimpl implements MusicPlayerService{
	private List<Music> systemPlayList = new ArrayList<Music>();
	private Mp3PathParser mp3PathParser;
	{
		String directoryPath = nextLine("음악폴더 경로를 지정해주세요.>");
		mp3PathParser = new Mp3PathParser(directoryPath);
		LogManager.getLogManager().reset();
		for(String filePath : mp3PathParser.getPathList()) {
//				System.out.println(filePath);
				Music music = new Music(filePath);
				
				if(music.getTag() == null) continue;
				
				systemPlayList.add(new Music(filePath));
		}
	}
	// 만약 곡리스트가 10곡이상이면, 페이지를 나눠서 출력
	// 그리고, 버튼 입력받아서 페이지다음, 이전가능하게 구현
	
	/**
	 * @author 김문수
	 * 2021-07-29
	 * allList 구현 후 1차 수정.
	 * 음악의 모든 목록을 페이지를 나눠서 출력.
	 * 페이지 이동, 곡 선택 구현.
	 */
	public void allList() {
		int input = 0; 
		if(systemPlayList.isEmpty()) {
			System.out.println("리스트가 비었습니다.");
			return;
		}
		listViewer(systemPlayList);
	}
	
	public void myList() {
		
	}

	
	public void favoritList() {
		
		
	}
	
	/**
	 * @author 현석
	 * 기능 테스트를 위한 임시 main메서드 입니다.
	 * 
	 */
	public static void main(String[] args) {
		  MusicPlayerService mps = new MusicPlayerServiceimpl();
		  mps.allList();
	}
	
	private void listViewer(List<Music> list) {
		int input = 0; 
		int printNum = 5;
        int j = 0;
        int cnt = 0;
        while (true) {
            for (int i = 0 + j; i < printNum + j; i++) {
                if(0 <= i && i < list.size())
                    System.out.println(list.get(i).getTag(TITLE));
                if ((i + 1) % printNum == 0) {
                    input = nextInt("이전 : 1    다음 : 2    종료 : 3    음악선택 : 4 ");
                    switch (input) {
                    case 1:
                        j -= printNum;
                        cnt--;
                        break;
                    case 2:
                        j += printNum;
                        cnt++;
                        break;
                    case 3:
                        return;
                    case 4:
                    	System.out.println("음악을 선택하세요.");
                    	 input = nextInt("1  2  3  4  5");
                    	 System.out.println("Selected >>>  " + list.get((input-1) + cnt * printNum) + "   <<<");
//                    	 Music music = systemPlayList.get((input-1) + cnt * printNum);
//                    	 pickMusic(music);
                    	 
                    	break;
                    		
                    	}
                        
                    }
                }
            }
	}
	
	
}

