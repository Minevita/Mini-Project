package UserService;

import static MusicPlayerUtil.MusicPlayerCommon.*;

import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.util.ArrayList;
import java.util.List;



import UserVo.User;

/**
 * 
 * @author 김기락 210802
 * 유저서비스의 메서드를 구현하는 클래스입니다.
 * 회원가입, 유저 데이터 저장, 불러오기 기능 구현
 * 
 * 210805 User user 삭제, 시작 시 유저데이터 확인
 */


public class UserServiceImpl implements UserService {
	private List<User> users = new ArrayList<User>();
	{
		loadDb();
		users.forEach(System.out::println);
	}
	// 파일 저장
	public void saveDb() {			
		try(ObjectOutputStream oos = new ObjectOutputStream(new FileOutputStream("UserDB.ser"))) {
			oos.writeObject(users);
			System.out.println("저장되었습니다.");
		} catch (Exception e) {
			e.printStackTrace();
		}
	}
	
	// 파일 불러오기
	public void loadDb() {			
		try(ObjectInputStream ois = new ObjectInputStream(new FileInputStream("UserDB.ser"))) {
			users = (List<User>) ois.readObject();
		} catch (Exception e) {															//파일을 못찾을 경우 더미데이터 생성
			users.add(new User("Test1", "asdfasdf1"));
			users.add(new User("Test2", "asdfasdf2"));
			users.add(new User("Test3", "asdfasdf3"));
		}
	}
		
	// 입력된 아이디를 통한 해당 리스트 호출
	public User userListID(String inputId) {
		for(int i = 0; i < users.size(); i++) {												// 유저목록의 id들을 inputId와 비교 
			if (inputId.equals(users.get(i).getId())) {										// 아이디 비교 한 결과 존재하면 로그인으로 진입
				return users.get(i);
			}
		}
		return null;
	}
	
	// 입력된 패스워드를 통한 해당 리스트 호출
	public User userListPW(String inputPw) {
		for(int i = 0; i < users.size(); i++) {												// 유저목록의 id들을 inputId와 비교 
			if (inputPw.equals(users.get(i).getPw())) {										// 아이디 비교 한 결과 존재하면 로그인으로 진입
				return users.get(i);
			}
		}
		return null;
	}
	
	// 게스트유저 생성
	public User guestUser() {
		users.add(new User(null, null));
		System.out.println("게스트로 입장하셨습니다.");
		return null;
	} 
	
	
	//입력된 아이디를 통해 해당 리스트의 아이디를 호출
	public String userID(String inputId) {
		for(int i = 0; i < users.size(); i++) {												// 유저목록의 id들을 inputId와 비교 
			if (inputId.equals(users.get(i).getId())) {										// 아이디 비교 한 결과 존재하면 로그인으로 진입
				return users.get(i).getId();
			}
		}
		return null;
	}
	
	////입력된 패스워드를 통해 해당 리스트의 패스워드를 호출
	public String userPW(String inputPw) {
		for(int i = 0; i < users.size(); i++) {												// 유저목록의 id들을 inputId와 비교 
			if (inputPw.equals(users.get(i).getPw())) {										// 아이디 비교 한 결과 존재하면 로그인으로 진입
				return users.get(i).getPw();
			}
		}
		return null;
	}
	
	// 회원가입 
	public void addUser() {
		String inputId = nextLine("아이디를 입력해 주세요. > ");							// 유저 생성할 아이디 입력
		
		if(inputId.contains(" ") || inputId.equals("")) {
			System.out.println("잘못된 아이디 패턴입니다. 다시 시도해주세요.");
			return;
		} 
		
		// 유저목록 파일 불러오기
		// 찾은값 널포인트 일시 호출될 처리 추가
		if(userID(inputId) == null) {
			System.out.println("입력한 아이디는 사용 가능합니다.");
		}else if(userID(inputId).equals(inputId)) {
			System.out.println("같은 아이디가 존재합니다 다시 입력해주세요");
			return;
		}

		String inputPw = nextLine("패스워드를 입력해 주세요 > ");							// 패스워드 1차 입력
		
		if (inputPw.contains(" ") || inputPw.equals("")){
			System.out.println("잘못된 비밀번호 패턴입니다. 처음부터 다시 시도해주세요.");
			return;
		}

		String inputPw2 = nextLine("패스워드를 다시 한번 입력해 주세요 > ");						// 패스워드 2차 입력

		
		if (!inputPw.equals(inputPw2)) {											// 입력된 패스워드 비교 후 다를 시 처음으로 회귀
			System.out.println("비밀번호가 다릅니다. 처음부터 다시 시도해주세요.");
			return;
		}else {																		// 패스워드 동일 비교 통과 후 DbMap과 users리스트에 id pw 추가
			users.add(new User(inputId, inputPw));
			System.out.println("새로운 계정이 생성되었습니다. 로그인을 진행해 주세요.");
		}
		saveDb();
	}

	// 로그인 서비스 
	public void login() {
		String inputId = nextLine("아이디를 입력해 주세요. > ");							// 유저 생성할 아이디 입력
		User userID = userListID(inputId);											//입력한 아이디의 값과 동일한 리스트를 찾아옴

		if(inputId.contains(" ") || inputId.equals("")) {
			System.out.println("잘못된 아이디 패턴입니다. 다시 시도해주세요.");
			return;
		} else if(userID == null) {
			System.out.println("입력한 아이디가 존재하지 않습니다. 아이디를 다시 확인해 주세요.");
			return;
		}
		
		String inputPw = nextLine("패스워드를 입력해 주세요 > ");
	
		if (inputPw.contains(" ") || inputPw.equals("")){
			System.out.println("잘못된 비밀번호 패턴입니다. 처음부터 다시 시도해주세요.");
			return;
		} else if (!userID.getPw().equals(inputPw)) {													// 입력된 패스워드 비교 후 다를 시 처음으로 회귀
			System.out.println("비밀번호가 다릅니다. 비밀번호를 다시 확인해주세요.");
			return;
		} 
		System.out.println("로그인에 성공했습니다.");
	}
}
